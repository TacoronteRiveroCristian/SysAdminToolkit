### Shared configuration for all services backup ###
x-sysadmintoolkit-backup-service: &sysadmintoolkit-backup-service
  build:
    context: .
    dockerfile: backup-influxdb.dockerfile
  volumes:
    - ./volumes/backup_logs:/var/log/backup_influxdb
  networks:
    - backup_network

### Services ###
services:
  sysadmintoolkit-influxdb: # InfluxDB server for development/testing
    image: influxdb:1.8
    container_name: sysadmintoolkit-influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=metrics
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - ./volumes/influxdb_data:/var/lib/influxdb
    profiles:
      - development
    networks:
      - backup_network

  sysadmintoolkit-grafana-dev: # Grafana server for development/testing
    image: grafana/grafana:latest
    container_name: sysadmintoolkit-grafana-dev
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana/grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=3000
    profiles:
      - development
    networks:
      - backup_network

  sysadmintoolkit-backup-service-dev: # Backup service for development
    container_name: sysadmintoolkit-backup-service-dev
    <<: *sysadmintoolkit-backup-service
    volumes:
      - ../../.cursor/:/app/.cursor/
      - ./volumes/backup_logs:/var/log/backup_influxdb
      - ./:/app/
    profiles:
      - development

  sysadmintoolkit-backup-service-prod: # Backup service for production
    container_name: sysadmintoolkit-backup-service-prod
    <<: *sysadmintoolkit-backup-service
    profiles:
      - production
    command: >
      sh -c "if grep -q 'backup_schedule:.*[^\"[:space:]]' /app/backup_config.yaml; then
               python /app/backup_influxdb_cron.py;
             else
               python /app/backup_influxdb.py;
             fi"

### Networks ###
networks:
  backup_network:
    driver: bridge
    name: ${INFLUXDB_NETWORK:-influxdb_network}
